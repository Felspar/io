#!/usr/bin/env bash
cd $(dirname $0)

CMAKE="cmake -G Ninja ."


$CMAKE -B build.tmp/gcc-debug \
    -DCMAKE_INSTALL_PREFIX=dist/gcc-debug

$CMAKE -B build.tmp/gcc-release \
    -DCMAKE_INSTALL_PREFIX=dist/gcc-release \
    -DCMAKE_BUILD_TYPE=Release


export CXXFLAGS=-stdlib=libc++
export LD_FLAGS=-stdlib=libc++

CC=clang CXX=clang++ $CMAKE -B build.tmp/clang-debug \
    -DCMAKE_INSTALL_PREFIX=dist/clang-debug

CC=clang CXX=clang++ $CMAKE -B build.tmp/clang-release \
    -DCMAKE_INSTALL_PREFIX=dist/clang-release \
    -DCMAKE_BUILD_TYPE=Release


# We can't use `undefined` sanitizer with coroutines due to clang bug :-(
export CXXFLAGS="${CXXFLAGS} -fsanitize=address"

CC=clang CXX=clang++ $CMAKE -B build.tmp/clang-debug-asan \
    -DCMAKE_INSTALL_PREFIX=dist/clang-debug-asan

CC=clang CXX=clang++ $CMAKE -B build.tmp/clang-release-asan \
    -DCMAKE_INSTALL_PREFIX=dist/clang-release-asan \
    -DCMAKE_BUILD_TYPE=Release


CC=clang CXX=clang++ $CMAKE -B build.tmp/clang-debug--io_uring-asan \
    -DFELSPAR_ENABLE_IO_URING=NO \
    -DCMAKE_INSTALL_PREFIX=dist/clang-debug--io_uring-asan

CC=clang CXX=clang++ $CMAKE -B build.tmp/clang-release--io_uring-asan \
    -DFELSPAR_ENABLE_IO_URING=NO \
    -DCMAKE_INSTALL_PREFIX=dist/clang-release--io_uring-asan \
    -DCMAKE_BUILD_TYPE=Release
